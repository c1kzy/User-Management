// Code generated by MockGen. DO NOT EDIT.
// Source: restapi/internal/infrastructure/inputports/grpc/handler (interfaces: ImplementedRatingService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	rating "restapi/internal/infrastructure/inputports/grpc/proto/rating"

	gomock "github.com/golang/mock/gomock"
)

// ImplementedRatingService is a mock of ImplementedRatingService interface.
type ImplementedRatingService struct {
	ctrl     *gomock.Controller
	recorder *ImplementedRatingServiceMockRecorder
}

// ImplementedRatingServiceMockRecorder is the mock recorder for ImplementedRatingService.
type ImplementedRatingServiceMockRecorder struct {
	mock *ImplementedRatingService
}

// NewImplementedRatingService creates a new mock instance.
func NewImplementedRatingService(ctrl *gomock.Controller) *ImplementedRatingService {
	mock := &ImplementedRatingService{ctrl: ctrl}
	mock.recorder = &ImplementedRatingServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *ImplementedRatingService) EXPECT() *ImplementedRatingServiceMockRecorder {
	return m.recorder
}

// UserVote mocks base method.
func (m *ImplementedRatingService) UserVote(arg0 context.Context, arg1 *rating.UserRatingRequest) (*rating.RatingResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UserVote", arg0, arg1)
	ret0, _ := ret[0].(*rating.RatingResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UserVote indicates an expected call of UserVote.
func (mr *ImplementedRatingServiceMockRecorder) UserVote(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UserVote", reflect.TypeOf((*ImplementedRatingService)(nil).UserVote), arg0, arg1)
}
